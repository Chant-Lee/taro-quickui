"use strict";var program=require("commander"),chalk=require("chalk"),command=require("../commands");program.version(require("../package").version).usage("<command> [options]"),program.command("init <app-name>").description("create a new project").action(function(o,e){command.init(o)}),program.command("build",{noHelp:!0}).description("build the project").action(function(o,e){command.build()}),program.command("debug",{noHelp:!0}).description("debug the project").action(function(o,e){command.debug()}),program.command("server",{noHelp:!0}).description("open server for project").option("--port","specified port").option("--watch","recompile project while file changes").action(function(o,e){command.server()}),program.command("watch",{noHelp:!0}).description("recompile project while file changes").action(function(o,e){command.watch()}),program.command("release",{noHelp:!0}).description("release the project").option("--debug","use debug sign").action(function(o,e){command.release()}),program.command("postinstall",{noHelp:!0}).description("postinstall modules in env").action(function(o,e){command.postinstall()}),program.command("update").description("update tools for project").option("--force","force update tools for project").action(function(o,e){command.update()}),program.on("--help",function(){console.log(),console.log("  Run "+chalk.cyan("hap <command> --help")+" for detailed usage of given command."),console.log()}),require("fs-extra"),setTimeout(function(){program.parse(process.argv),process.argv.slice(2).length||program.outputHelp()},0);