"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function checkVersion(){var e={cur:"",toolkit:"",res:0},r=void 0,a=_path2.default.join(curDir,"package.json");_fsExtra2.default.existsSync(a)&&(r=JSON.parse(_fsExtra2.default.readFileSync(a).toString()),e.cur=r.subversion&&r.subversion.toolkit||""),""===e.cur&&(e.res=1);var t=_path2.default.join(toolkitDir,"package.json");return _fsExtra2.default.existsSync(t)&&(r=JSON.parse(_fsExtra2.default.readFileSync(t).toString()),e.toolkit=r.version||""),""===e.toolkit?(console.log("### App Toolkit ### 当前toolkit的文件错误, 无法升级, 请重新安装后再升级"),e.res=-1,e):(1!==e.res&&(e.res=_semver2.default.gt(e.toolkit,e.cur)?1:0),e)}function mergeProps(e,r,a){if(e)for(var t in r)if(!a||!a[t]){var l=r[t];e[t]=l}}function upgradePackage(){console.log(_chalk2.default.green("升级 package.json"));var e={},r=_path2.default.join(curDir,"package.json");_fsExtra2.default.existsSync(r)&&(e=JSON.parse(_fsExtra2.default.readFileSync(r).toString()));var a={},t=_path2.default.join(toolkitDir,"templates/app/demo/package.json");_fsExtra2.default.existsSync(t)&&(a=JSON.parse(_fsExtra2.default.readFileSync(t).toString())),e.subversion=e.subversion||{},mergeProps(e.subversion,a.subversion),e.scripts=e.scripts||{},mergeProps(e.scripts,a.scripts),e.dependencies=e.dependencies||{},mergeProps(e.dependencies,a.dependencies),e.devDependencies=e.devDependencies||{},mergeProps(e.devDependencies,a.devDependencies),_fsExtra2.default.writeFileSync(r,JSON.stringify(e,null,2))}function copyFiles(e,r){var a=[];(0,_utils.traverseDirSync)(r,a),a.forEach(function(a){var t=_path2.default.relative(r,a),l=_path2.default.join(e,t);console.log(_chalk2.default.green("file: "+l+" copied.")),_fsExtra2.default.copySync(a,l)})}function upgradeSign(){console.log(_chalk2.default.green("升级 签名文件"));var e=_path2.default.join(curDir,"sign/debug");(0,_utils.clearDirSync)(e),(0,_utils.mkdirsSync)(e),copyFiles(e,_path2.default.join(toolkitDir,"templates/app/demo/sign/debug"))}function upgradeEslint(){var e=_path2.default.join(toolkitDir,"templates/app/demo",".eslintrc.json"),r=_path2.default.join(curDir,".eslintrc.json");_fsExtra2.default.copySync(e,r)}function checkBabelrcConfig(){var e=_path2.default.join(toolkitDir,"templates/app/demo",".babelrc"),r=_path2.default.join(curDir,".babelrc");if(!_fsExtra2.default.existsSync(r))return console.log(_chalk2.default.yellow("### App Toolkit ### 开发者工程目录中没有.babelrc文件， 更新.babelrc文件至开发者工程中")),void _fsExtra2.default.copySync(e,r);var a=JSON.parse(_fsExtra2.default.readFileSync(r)),t=JSON.parse(_fsExtra2.default.readFileSync(e));try{(0,_assert.deepEqual)(a,t)}catch(e){var l=(0,_utils.formatDate)("yyyyMMdd_hhmmss",new Date),o=_path2.default.join(curDir,".babelrc.old."+l),i=_path2.default.join(curDir,".babelrc.new."+l);_fsExtra2.default.writeFileSync(o,JSON.stringify(a,null,2)),_fsExtra2.default.writeFileSync(i,JSON.stringify(t,null,2)),console.log(_chalk2.default.yellow("### App Toolkit ### 开发者工程的.babelrc和即将更新的.babelrc不一致， 生成以下备份文件")),console.log(_chalk2.default.yellow("### App Toolkit ### 开发者现有.babelrc的备份文件保存为: "+o)),console.log(_chalk2.default.yellow("### App Toolkit ### 更新的.babelrc的备份文件保存为: "+i)),mergeProps(t,a),_fsExtra2.default.writeFileSync(_path2.default.join(curDir,".babelrc"),JSON.stringify(t,null,2)),console.log(_chalk2.default.yellow("### App Toolkit ### 合并更新的.babelrc文件与开发者工程的.babelrc文件。请开发者在验证能够正常编译工程之后，手动删除babelrc的备份文件"))}}function upgradePackageAndBackup(){var e="package.json",r=["subversion","scripts","devDependencies"],a=(0,_utils.formatDate)("yyyyMMdd_hhmmss",new Date),t=_path2.default.join(curDir,e),l=_path2.default.join(toolkitDir,"templates/app/demo",e);if(_fsExtra2.default.existsSync(t)&&_fsExtra2.default.existsSync(l))try{var o=require(t),i=require(l);r.forEach(function(e){o[e]=i[e]}),delete o.dependencies;var s=_path2.default.join(curDir,_path2.default.basename(e,".json")+".old."+a+".json");_fsExtra2.default.copySync(t,s),console.log(_chalk2.default.yellow("### App Toolkit ### 更新的"+e+"的备份文件保存为: "+s)),_fsExtra2.default.writeFileSync(t,JSON.stringify(o,null,2))}catch(e){console.error("更新package.json出错："+e.message)}}function updateProject(){var e=checkVersion();if(force)console.log(_chalk2.default.yellow("强制升级工程( "+e.cur+" ----\x3e "+e.toolkit+" )(可能会出现兼容性问题)")),upgradePackageAndBackup();else{if(e.res<0||0===e.res&&!force)return void(0===e.res&&console.log("### App Toolkit ### 版本已经是最新版本"));console.log(_chalk2.default.green("升级工程( "+e.cur+" ----\x3e "+e.toolkit+" )")),upgradePackage()}upgradeSign(),upgradeEslint(),checkBabelrcConfig(),console.log(_chalk2.default.green("升级完毕, 请运行npm install更新依赖包"))}var _assert=require("assert"),_path=require("path"),_path2=_interopRequireDefault(_path),_fsExtra=require("fs-extra"),_fsExtra2=_interopRequireDefault(_fsExtra),_yargs=require("yargs"),_yargs2=_interopRequireDefault(_yargs),_chalk=require("chalk"),_chalk2=_interopRequireDefault(_chalk),_semver=require("semver"),_semver2=_interopRequireDefault(_semver),_utils=require("./utils"),argv=_yargs2.default.argv,force=void 0!==argv.force,curDir=process.cwd(),toolkitDir=_path2.default.join(__dirname,"../");module.exports=updateProject;